{"ast":null,"code":"import _slicedToArray from \"C:/Users/dcmcc/Desktop/dan-mccarthy265.github.io/simple_web3_app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useEffect, useState } from 'react';\n\nfunction getItem(key) {\n  if (typeof window === 'undefined') {\n    return null;\n  }\n\n  var item = window.localStorage.getItem(key);\n\n  if (item !== null) {\n    try {\n      return JSON.parse(item);\n    } catch (_a) {// ignore error\n    }\n  }\n}\n\nfunction setItem(key, value) {\n  if (value === undefined) {\n    window.localStorage.removeItem(key);\n  } else {\n    var toStore = JSON.stringify(value);\n    window.localStorage.setItem(key, toStore);\n    return JSON.parse(toStore);\n  }\n}\n/**\n * @internal Intended for internal use - use it on your own risk\n */\n\n\nexport function useLocalStorage(key) {\n  var _useState = useState(function () {\n    return getItem(key);\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  useEffect(function () {\n    setValue(getItem(key));\n  }, [key]);\n  useEffect(function () {\n    setItem(key, value);\n  }, [value, key]);\n  return [value, setValue];\n}","map":{"version":3,"mappings":";AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,SAASC,OAAT,CAAiBC,GAAjB,EAA4B;EAC1B,IAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;IACjC,OAAO,IAAP;EACD;;EAED,IAAMC,IAAI,GAAGD,MAAM,CAACE,YAAP,CAAoBJ,OAApB,CAA4BC,GAA5B,CAAb;;EACA,IAAIE,IAAI,KAAK,IAAb,EAAmB;IACjB,IAAI;MACF,OAAOE,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAP;IACD,CAFD,CAEE,WAAM,CACN;IACD;EACF;AACF;;AAED,SAASI,OAAT,CAAiBN,GAAjB,EAA8BO,KAA9B,EAAwC;EACtC,IAAIA,KAAK,KAAKC,SAAd,EAAyB;IACvBP,MAAM,CAACE,YAAP,CAAoBM,UAApB,CAA+BT,GAA/B;EACD,CAFD,MAEO;IACL,IAAMU,OAAO,GAAGN,IAAI,CAACO,SAAL,CAAeJ,KAAf,CAAhB;IACAN,MAAM,CAACE,YAAP,CAAoBG,OAApB,CAA4BN,GAA5B,EAAiCU,OAAjC;IACA,OAAON,IAAI,CAACC,KAAL,CAAWK,OAAX,CAAP;EACD;AACF;AAED;;;;;AAGA,OAAM,SAAUE,eAAV,CAA0BZ,GAA1B,EAAqC;EACzC,gBAA0BF,QAAQ,CAAC;IAAA,OAAMC,OAAO,CAACC,GAAD,CAAb;EAAA,CAAD,CAAlC;EAAA;EAAA,IAAOO,KAAP;EAAA,IAAcM,QAAd;;EAEAhB,SAAS,CAAC,YAAK;IACbgB,QAAQ,CAACd,OAAO,CAACC,GAAD,CAAR,CAAR;EACD,CAFQ,EAEN,CAACA,GAAD,CAFM,CAAT;EAIAH,SAAS,CAAC,YAAK;IACbS,OAAO,CAACN,GAAD,EAAMO,KAAN,CAAP;EACD,CAFQ,EAEN,CAACA,KAAD,EAAQP,GAAR,CAFM,CAAT;EAIA,OAAO,CAACO,KAAD,EAAQM,QAAR,CAAP;AACD","names":["useEffect","useState","getItem","key","window","item","localStorage","JSON","parse","setItem","value","undefined","removeItem","toStore","stringify","useLocalStorage","setValue"],"sources":["C:\\Users\\dcmcc\\Desktop\\dan-mccarthy265.github.io\\simple_web3_app\\node_modules\\@usedapp\\core\\src\\hooks\\useLocalStorage.ts"],"sourcesContent":["import { useEffect, useState } from 'react'\n\nfunction getItem(key: string) {\n  if (typeof window === 'undefined') {\n    return null\n  }\n\n  const item = window.localStorage.getItem(key)\n  if (item !== null) {\n    try {\n      return JSON.parse(item)\n    } catch {\n      // ignore error\n    }\n  }\n}\n\nfunction setItem(key: string, value: any) {\n  if (value === undefined) {\n    window.localStorage.removeItem(key)\n  } else {\n    const toStore = JSON.stringify(value)\n    window.localStorage.setItem(key, toStore)\n    return JSON.parse(toStore)\n  }\n}\n\n/**\n * @internal Intended for internal use - use it on your own risk\n */\nexport function useLocalStorage(key: string) {\n  const [value, setValue] = useState(() => getItem(key))\n\n  useEffect(() => {\n    setValue(getItem(key))\n  }, [key])\n\n  useEffect(() => {\n    setItem(key, value)\n  }, [value, key])\n\n  return [value, setValue] as const\n}\n"]},"metadata":{},"sourceType":"module"}