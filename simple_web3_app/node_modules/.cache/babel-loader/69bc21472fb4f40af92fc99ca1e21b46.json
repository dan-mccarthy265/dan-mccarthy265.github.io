{"ast":null,"code":"import _createForOfIteratorHelper from \"/mnt/c/Users/dcmcc/Desktop/dan-mccarthy265.github.io/simple_web3_app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\n\n/**\n * @internal Intended for internal use - use it on your own risk\n */\nexport function warnOnInvalidFilter(filter) {\n  if (!filter) {\n    return;\n  }\n\n  var contract = filter.contract,\n      event = filter.event,\n      args = filter.args;\n  console.warn(\"Invalid contract filter: address=\".concat(contract.address, \" event=\").concat(event, \" args=\").concat(args));\n}\n/**\n * @internal Intended for internal use - use it on your own risk\n */\n\nexport function encodeFilterData(filter, fromBlock, toBlock, blockHash) {\n  if (!filter) {\n    return undefined;\n  }\n\n  var contract = filter.contract,\n      event = filter.event,\n      args = filter.args;\n\n  if (!contract.address || !event) {\n    warnOnInvalidFilter(filter);\n    return undefined;\n  }\n\n  try {\n    var encodedTopics = contract.interface.encodeFilterTopics(event, args);\n\n    if (blockHash) {\n      return {\n        address: contract.address,\n        topics: encodedTopics,\n        blockHash: blockHash\n      };\n    } else {\n      return {\n        address: contract.address,\n        topics: encodedTopics,\n        fromBlock: fromBlock !== null && fromBlock !== void 0 ? fromBlock : 0,\n        toBlock: toBlock !== null && toBlock !== void 0 ? toBlock : 'latest'\n      };\n    }\n  } catch (e) {\n    if (e instanceof Error) {\n      return e;\n    } else {\n      warnOnInvalidFilter(filter);\n      return undefined;\n    }\n  }\n}\n/**\n * @internal Intended for internal use - use it on your own risk\n */\n\nexport function decodeLogs(filter, result) {\n  if (!result || !filter) {\n    return undefined;\n  }\n\n  try {\n    if (result instanceof Error) {\n      return {\n        value: undefined,\n        error: result\n      };\n    }\n\n    var decodedLogs = [];\n\n    var _iterator = _createForOfIteratorHelper(result),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var log = _step.value;\n        var data = filter.contract.interface.decodeEventLog(filter.event, log.data, log.topics);\n        decodedLogs.push({\n          data: data,\n          blockNumber: log.blockNumber,\n          blockHash: log.blockHash,\n          transactionIndex: log.transactionIndex,\n          transactionHash: log.transactionHash,\n          removed: log.removed\n        });\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return {\n      value: decodedLogs,\n      error: undefined\n    };\n  } catch (error) {\n    return {\n      value: undefined,\n      error: error\n    };\n  }\n}","map":{"version":3,"mappings":"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","names":["warnOnInvalidFilter","filter","contract","event","args","console","warn","address","encodeFilterData","fromBlock","toBlock","blockHash","undefined","encodedTopics","interface","encodeFilterTopics","topics","e","Error","decodeLogs","result","value","error","decodedLogs","log","data","decodeEventLog","push","blockNumber","transactionIndex","transactionHash","removed"],"sources":["/mnt/c/Users/dcmcc/Desktop/dan-mccarthy265.github.io/simple_web3_app/node_modules/@usedapp/core/src/helpers/logs.ts"],"sourcesContent":["import { EventFragment } from '@ethersproject/abi'\nimport { BlockTag, Filter, FilterByBlockHash, Log } from '@ethersproject/abstract-provider'\nimport { TypedFilter } from '../hooks/useLogs'\nimport { Awaited, ContractEventNames, DetailedEventRecord, EventRecord, Falsy, TypedContract } from '../model/types'\n\n/**\n * @internal Intended for internal use - use it on your own risk\n */\nexport function warnOnInvalidFilter(filter: TypedFilter | Falsy) {\n  if (!filter) {\n    return\n  }\n  const { contract, event, args } = filter\n  console.warn(`Invalid contract filter: address=${contract.address} event=${event} args=${args}`)\n}\n\n/**\n * @internal Intended for internal use - use it on your own risk\n */\nexport function encodeFilterData(\n  filter: TypedFilter | Falsy,\n  fromBlock?: BlockTag,\n  toBlock?: BlockTag,\n  blockHash?: string\n): Filter | FilterByBlockHash | Falsy | Error {\n  if (!filter) {\n    return undefined\n  }\n  const { contract, event, args } = filter\n  if (!contract.address || !event) {\n    warnOnInvalidFilter(filter)\n    return undefined\n  }\n  try {\n    const encodedTopics = contract.interface.encodeFilterTopics((event as unknown) as EventFragment, args)\n\n    if (blockHash) {\n      return {\n        address: contract.address,\n        topics: encodedTopics,\n        blockHash: blockHash,\n      } as FilterByBlockHash\n    } else {\n      return {\n        address: contract.address,\n        topics: encodedTopics,\n        fromBlock: fromBlock ?? 0,\n        toBlock: toBlock ?? 'latest',\n      } as Filter\n    }\n  } catch (e) {\n    if (e instanceof Error) {\n      return e as Error\n    } else {\n      warnOnInvalidFilter(filter)\n      return undefined\n    }\n  }\n}\n\n/**\n * @public\n */\nexport type LogsResult<T extends TypedContract, EN extends ContractEventNames<T>> =\n  | { value: Awaited<DetailedEventRecord<T, EN>>[]; error: undefined }\n  | { value: undefined; error: Error }\n  | undefined\n\n/**\n * @internal Intended for internal use - use it on your own risk\n */\nexport function decodeLogs<T extends TypedContract, EN extends ContractEventNames<T>>(\n  filter: TypedFilter | Falsy,\n  result: Log[] | Falsy | Error\n): LogsResult<T, EN> {\n  if (!result || !filter) {\n    return undefined\n  }\n  try {\n    if (result instanceof Error) {\n      return {\n        value: undefined,\n        error: result,\n      }\n    }\n\n    const decodedLogs: Awaited<DetailedEventRecord<T, EN>>[] = []\n\n    for (const log of result) {\n      const data = filter.contract.interface.decodeEventLog(filter.event, log.data, log.topics) as EventRecord<T, EN>\n\n      decodedLogs.push({\n        data,\n        blockNumber: log.blockNumber,\n        blockHash: log.blockHash,\n        transactionIndex: log.transactionIndex,\n        transactionHash: log.transactionHash,\n        removed: log.removed,\n      })\n    }\n\n    return {\n      value: decodedLogs,\n      error: undefined,\n    }\n  } catch (error) {\n    return {\n      value: undefined,\n      error: error as Error,\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}