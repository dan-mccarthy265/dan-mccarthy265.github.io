{"ast":null,"code":"import _defineProperty from \"C:/Users/dcmcc/Desktop/dan-mccarthy265.github.io/simple_web3_app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _toConsumableArray from \"C:/Users/dcmcc/Desktop/dan-mccarthy265.github.io/simple_web3_app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nexport function transactionReducer(state, action) {\n  var _a;\n\n  switch (action.type) {\n    case 'ADD_TRANSACTION':\n      {\n        var chainId = action.payload.transaction.chainId;\n        return Object.assign(Object.assign({}, state), _defineProperty({}, chainId, [action.payload].concat(_toConsumableArray((_a = state[chainId]) !== null && _a !== void 0 ? _a : []))));\n      }\n\n    case 'UPDATE_TRANSACTIONS':\n      return Object.assign(Object.assign({}, state), _defineProperty({}, action.chainId, _toConsumableArray(action.transactions)));\n  }\n}","map":{"version":3,"mappings":";;AAcA,OAAM,SAAUA,kBAAV,CAA6BC,KAA7B,EAAwDC,MAAxD,EAAsE;;;EAC1E,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,iBAAL;MAAwB;QACtB,IAAQC,OAAR,GAAoBF,MAAM,CAACG,OAAP,CAAeC,WAAnC,CAAQF,OAAR;QACA,uCACKH,KADL,uBAEGG,OAFH,GAEcF,MAAM,CAACG,OAFrB,4BAEkC,WAAK,CAACD,OAAD,CAAL,MAAc,IAAd,IAAcG,aAAd,GAAcA,EAAd,GAAkB,EAFpD;MAID;;IACD,KAAK,qBAAL;MACE,uCAAYN,KAAZ,uBAAoBC,MAAM,CAACE,OAA3B,qBAAyCF,MAAM,CAACM,YAAhD;EATJ;AAWD","names":["transactionReducer","state","action","type","chainId","payload","transaction","_a","transactions"],"sources":["C:\\Users\\dcmcc\\Desktop\\dan-mccarthy265.github.io\\simple_web3_app\\node_modules\\@usedapp\\core\\src\\providers\\transactions\\reducer.ts"],"sourcesContent":["import { StoredTransaction, StoredTransactions } from './model'\n\ntype Action = AddTransaction | UpdateTransactions\n\ninterface AddTransaction {\n  type: 'ADD_TRANSACTION'\n  payload: StoredTransaction\n}\ninterface UpdateTransactions {\n  type: 'UPDATE_TRANSACTIONS'\n  chainId: number\n  transactions: StoredTransaction[]\n}\n\nexport function transactionReducer(state: StoredTransactions, action: Action): StoredTransactions {\n  switch (action.type) {\n    case 'ADD_TRANSACTION': {\n      const { chainId } = action.payload.transaction\n      return {\n        ...state,\n        [chainId]: [action.payload, ...(state[chainId] ?? [])],\n      }\n    }\n    case 'UPDATE_TRANSACTIONS':\n      return { ...state, [action.chainId]: [...action.transactions] }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}