{"ast":null,"code":"import { DEFAULT_SUPPORTED_CHAINS } from '../constants';\n/**\n * @internal Intended for internal use - use it on your own risk\n */\n\nexport var getChainById = function getChainById(chainId) {\n  return DEFAULT_SUPPORTED_CHAINS.find(function (network) {\n    return network.chainId === chainId;\n  });\n};\n\nvar deprecationWarning = function deprecationWarning(methodName) {\n  return console.warn(\"\".concat(methodName, \" is deprecated, can call with Chain directly\"));\n};\n/**\n * @public\n * @deprecated\n */\n\n\nexport var getExplorerAddressLink = function getExplorerAddressLink(address, chainId) {\n  var _a;\n\n  deprecationWarning('getExplorerAddressLink');\n  return ((_a = getChainById(chainId)) === null || _a === void 0 ? void 0 : _a.getExplorerAddressLink(address)) || '';\n};\n/**\n * @public\n * @deprecated\n */\n\nexport var getExplorerTransactionLink = function getExplorerTransactionLink(transactionHash, chainId) {\n  var _a;\n\n  deprecationWarning('getExplorerTransactionLink');\n  return ((_a = getChainById(chainId)) === null || _a === void 0 ? void 0 : _a.getExplorerTransactionLink(transactionHash)) || '';\n};\n/**\n * @public\n * @deprecated\n */\n\nexport var getChainName = function getChainName(chainId) {\n  var _a;\n\n  deprecationWarning('getChainName');\n  return ((_a = getChainById(chainId)) === null || _a === void 0 ? void 0 : _a.chainName) || '';\n};\n/**\n * @public\n * @deprecated\n */\n\nexport var isTestChain = function isTestChain(chainId) {\n  var _a;\n\n  deprecationWarning('isTestChain');\n  return ((_a = getChainById(chainId)) === null || _a === void 0 ? void 0 : _a.isTestChain) || false;\n};\n/**\n * @public\n * @deprecated\n */\n\nexport var isLocalChain = function isLocalChain(chainId) {\n  var _a;\n\n  deprecationWarning('isLocalChain');\n  return ((_a = getChainById(chainId)) === null || _a === void 0 ? void 0 : _a.isLocalChain) || false;\n};","map":{"version":3,"mappings":"AAAA,SAASA,wBAAT,QAAkD,cAAlD;AAEA;;;;AAGA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,OAAD;EAAA,OAC1BF,wBAAwB,CAACG,IAAzB,CAA8B,UAACC,OAAD;IAAA,OAAaA,OAAO,CAACF,OAAR,KAAoBA,OAAjC;EAAA,CAA9B,CAD0B;AAAA,CAArB;;AAGP,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,UAAD;EAAA,OACzBC,OAAO,CAACC,IAAR,WAAgBF,UAAhB,kDADyB;AAAA,CAA3B;AAGA;;;;;;AAIA,OAAO,IAAMG,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,OAAD,EAAkBR,OAAlB,EAAmD;;;EACvFG,kBAAkB,CAAC,wBAAD,CAAlB;EACA,OAAO,mBAAY,CAACH,OAAD,CAAZ,MAAqB,IAArB,IAAqBS,aAArB,GAAqB,MAArB,GAAqBA,GAAEF,sBAAF,CAAyBC,OAAzB,CAArB,KAA0D,EAAjE;AACD,CAHM;AAKP;;;;;AAIA,OAAO,IAAME,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACC,eAAD,EAA0BX,OAA1B,EAA2D;;;EACnGG,kBAAkB,CAAC,4BAAD,CAAlB;EACA,OAAO,mBAAY,CAACH,OAAD,CAAZ,MAAqB,IAArB,IAAqBS,aAArB,GAAqB,MAArB,GAAqBA,GAAEC,0BAAF,CAA6BC,eAA7B,CAArB,KAAsE,EAA7E;AACD,CAHM;AAKP;;;;;AAIA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACZ,OAAD,EAAqB;;;EAC/CG,kBAAkB,CAAC,cAAD,CAAlB;EACA,OAAO,mBAAY,CAACH,OAAD,CAAZ,MAAqB,IAArB,IAAqBS,aAArB,GAAqB,MAArB,GAAqBA,GAAEI,SAAvB,KAAoC,EAA3C;AACD,CAHM;AAKP;;;;;AAIA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACd,OAAD,EAAqB;;;EAC9CG,kBAAkB,CAAC,aAAD,CAAlB;EACA,OAAO,mBAAY,CAACH,OAAD,CAAZ,MAAqB,IAArB,IAAqBS,aAArB,GAAqB,MAArB,GAAqBA,GAAEK,WAAvB,KAAsC,KAA7C;AACD,CAHM;AAKP;;;;;AAIA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACf,OAAD,EAAqB;;;EAC/CG,kBAAkB,CAAC,cAAD,CAAlB;EACA,OAAO,mBAAY,CAACH,OAAD,CAAZ,MAAqB,IAArB,IAAqBS,aAArB,GAAqB,MAArB,GAAqBA,GAAEM,YAAvB,KAAuC,KAA9C;AACD,CAHM","names":["DEFAULT_SUPPORTED_CHAINS","getChainById","chainId","find","network","deprecationWarning","methodName","console","warn","getExplorerAddressLink","address","_a","getExplorerTransactionLink","transactionHash","getChainName","chainName","isTestChain","isLocalChain"],"sources":["/mnt/c/Users/dcmcc/Desktop/dan-mccarthy265.github.io/simple_web3_app/node_modules/@usedapp/core/src/helpers/chain.ts"],"sourcesContent":["import { DEFAULT_SUPPORTED_CHAINS, ChainId } from '../constants'\n\n/**\n * @internal Intended for internal use - use it on your own risk\n */\nexport const getChainById = (chainId: ChainId) =>\n  DEFAULT_SUPPORTED_CHAINS.find((network) => network.chainId === chainId)\n\nconst deprecationWarning = (methodName: string) =>\n  console.warn(`${methodName} is deprecated, can call with Chain directly`)\n\n/**\n * @public\n * @deprecated\n */\nexport const getExplorerAddressLink = (address: string, chainId: ChainId): string | '' => {\n  deprecationWarning('getExplorerAddressLink')\n  return getChainById(chainId)?.getExplorerAddressLink(address) || ''\n}\n\n/**\n * @public\n * @deprecated\n */\nexport const getExplorerTransactionLink = (transactionHash: string, chainId: ChainId): string | '' => {\n  deprecationWarning('getExplorerTransactionLink')\n  return getChainById(chainId)?.getExplorerTransactionLink(transactionHash) || ''\n}\n\n/**\n * @public\n * @deprecated\n */\nexport const getChainName = (chainId: ChainId) => {\n  deprecationWarning('getChainName')\n  return getChainById(chainId)?.chainName || ''\n}\n\n/**\n * @public\n * @deprecated\n */\nexport const isTestChain = (chainId: ChainId) => {\n  deprecationWarning('isTestChain')\n  return getChainById(chainId)?.isTestChain || false\n}\n\n/**\n * @public\n * @deprecated\n */\nexport const isLocalChain = (chainId: ChainId) => {\n  deprecationWarning('isLocalChain')\n  return getChainById(chainId)?.isLocalChain || false\n}\n"]},"metadata":{},"sourceType":"module"}