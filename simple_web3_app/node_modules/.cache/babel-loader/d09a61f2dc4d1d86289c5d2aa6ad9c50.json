{"ast":null,"code":"import _regeneratorRuntime from \"/mnt/c/Users/dcmcc/Desktop/dan-mccarthy265.github.io/simple_web3_app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/mnt/c/Users/dcmcc/Desktop/dan-mccarthy265.github.io/simple_web3_app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Web3Provider } from '@ethersproject/providers';\nimport detectEthereumProvider from '@metamask/detect-provider';\nexport function getInjectedProvider(_x) {\n  return _getInjectedProvider.apply(this, arguments);\n}\n\nfunction _getInjectedProvider() {\n  _getInjectedProvider = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(pollingInterval) {\n    var injectedProvider, provider;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return detectEthereumProvider();\n\n          case 2:\n            injectedProvider = _context.sent;\n\n            if (injectedProvider) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\", undefined);\n\n          case 5:\n            provider = new Web3Provider(injectedProvider, 'any');\n            provider.pollingInterval = pollingInterval;\n            return _context.abrupt(\"return\", provider);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getInjectedProvider.apply(this, arguments);\n}","map":{"version":3,"mappings":";;AAAA,SAASA,YAAT,QAA6B,0BAA7B;AACA,OAAOC,sBAAP,MAAmC,2BAAnC;AAEA,gBAAsBC,mBAAtB;EAAA;AAAA;;;oFAAO,iBAAmCC,eAAnC;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,OAC+BF,sBAAsB,EADrD;;UAAA;YACCG,gBADD;;YAAA,IAEAA,gBAFA;cAAA;cAAA;YAAA;;YAAA,iCAGIC,SAHJ;;UAAA;YAMCC,QAND,GAMY,IAAIN,YAAJ,CAAiBI,gBAAjB,EAAmC,KAAnC,CANZ;YAOLE,QAAQ,CAACH,eAAT,GAA2BA,eAA3B;YAPK,iCAQEG,QARF;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,C","names":["Web3Provider","detectEthereumProvider","getInjectedProvider","pollingInterval","injectedProvider","undefined","provider"],"sources":["/mnt/c/Users/dcmcc/Desktop/dan-mccarthy265.github.io/simple_web3_app/node_modules/@usedapp/core/src/helpers/injectedProvider.ts"],"sourcesContent":["import { Web3Provider } from '@ethersproject/providers'\nimport detectEthereumProvider from '@metamask/detect-provider'\n\nexport async function getInjectedProvider(pollingInterval: number) {\n  const injectedProvider: any = await detectEthereumProvider()\n  if (!injectedProvider) {\n    return undefined\n  }\n\n  const provider = new Web3Provider(injectedProvider, 'any')\n  provider.pollingInterval = pollingInterval\n  return provider\n}\n"]},"metadata":{},"sourceType":"module"}